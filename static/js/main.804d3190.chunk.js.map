{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Spinner.js","components/Modal.js","services/ApiService.js","components/App.js","index.js"],"names":["Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","largeImageURL","onClick","defaultProps","ImageGallery","images","map","id","webformatURL","key","atl","Button","title","Spinner","color","height","width","Modal","handleKeyDown","code","onClose","handleClick","currentTarget","window","addEventListener","removeEventListener","imgData","searchRequest","request","page","url","axios","get","then","data","propTypes","PropTypes","string","isRequired","number","App","searchQuery","totalImages","isLoading","showModal","handleScroll","scrollTo","top","document","documentElement","scrollHeight","behavior","fetchAImages","ApiService","hits","totalHits","prevState","catch","error","console","log","finally","handleSearchFormSubmit","query","toggleModal","prevProps","actButton","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.804d3190.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ src, alt, largeImageURL, onClick }) => {\r\n  const getImgData = () => onClick(largeImageURL, alt);\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={getImgData}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.defaultProps = {\r\n  alt: \"image\",\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, type, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          src={webformatURL}\r\n          atl={type}\r\n          largeImageURL={largeImageURL}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      type: PropTypes.string,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ title, className, onClick }) => {\r\n  return (\r\n    <button type=\"button\" className={className} onClick={onClick}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string,\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={40}\r\n        width={40}\r\n        className=\"Loader\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    imgData: PropTypes.shape({\r\n      src: PropTypes.string.isRequired,\r\n      alt: PropTypes.string.isRequired,\r\n    }),\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props.imgData;\r\n\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleClick}>\r\n        <div className=\"Modal\">\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst searchRequest = (request, page = 1) => {\r\n  const key = \"17753930-92228c8f53e05da38e171658f\";\r\n  const url = `https://pixabay.com/api/?q=${request}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n  return axios.get(url).then(({ data }) => data);\r\n};\r\n\r\nsearchRequest.propTypes = {\r\n  request: PropTypes.string.isRequired,\r\n  page: PropTypes.number,\r\n};\r\n\r\nexport default {\r\n  searchRequest,\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport Searchbar from \"./Searchbar\";\r\nimport ImageGallery from \"./ImageGallery\";\r\nimport Button from \"./Button\";\r\nimport Spinner from \"./Spinner\";\r\nimport Modal from \"./Modal\";\r\n\r\nimport ApiService from \"../services/ApiService\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    searchQuery: \"\",\r\n    page: 0,\r\n    totalImages: 0,\r\n    isLoading: false,\r\n    showModal: false,\r\n    imgData: { src: \"\", alt: \"\" },\r\n  };\r\n\r\n  componentDidUpdate(prevProps, { searchQuery, page }) {\r\n    const nextQuery = this.state.searchQuery;\r\n\r\n    if (searchQuery !== nextQuery) {\r\n      this.fetchAImages();\r\n    }\r\n\r\n    if (page < this.state.page) {\r\n      this.handleScroll();\r\n    }\r\n  }\r\n\r\n  handleScroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  fetchAImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    ApiService.searchRequest(searchQuery, page)\r\n      .then(({ hits, totalHits }) =>\r\n        this.setState((prevState) => ({\r\n          images: [...prevState.images, ...hits],\r\n          totalImages: totalHits,\r\n          page: prevState.page + 1,\r\n        }))\r\n      )\r\n      .catch((error) => console.log(error))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleSearchFormSubmit = (query) => {\r\n    this.setState({\r\n      images: [],\r\n      searchQuery: query,\r\n      page: 1,\r\n    });\r\n  };\r\n\r\n  toggleModal = (src, alt) => {\r\n    this.setState((state) => ({\r\n      imgData: { src: src, alt: alt },\r\n      showModal: !state.showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { images, totalImages, isLoading, showModal, imgData } = this.state;\r\n\r\n    const actButton =\r\n      images.length > 0 && !isLoading && images.length < totalImages;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\r\n\r\n        <ImageGallery images={this.state.images} onClick={this.toggleModal} />\r\n        {isLoading && <Spinner />}\r\n        {actButton && (\r\n          <Button\r\n            title=\"Load more\"\r\n            className=\"Button\"\r\n            onClick={this.fetchAImages}\r\n          />\r\n        )}\r\n        {showModal && <Modal imgData={imgData} onClose={this.toggleModal} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}